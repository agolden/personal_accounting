<?php	session_start();	if (!isset($_SESSION['authenticated']))	{		header( 'Location: ../login.php?dest=' . urlencode($_SERVER['REQUEST_URI']) );		die();	}		//Check to ensure the required parameters have been provided		if (!isset($_GET['date']))			die("You are missing one or more required parameters.");				//Get the date from the query string and ensure it is in a valid format		$date = DateTime::createFromFormat('d/m/Y', $_GET['date']);		if (!$date)			die("The provided date is invalid or improperly formatted.");		$valuesArray = array();		$valuesArray[":transaction_date"] = $date->format("Y-m-d");				//Set up the database connection		require_once('../hidden/helper_classes/DatabaseConnection.php');		$dbh = (new DatabaseConnection)->getConn();				//Helper function to execute the query, retrieving records and writing them as XML		function writeXML($recordName, $query, $valuesArray, $dbh)		{			$stmt = $dbh->prepare($query);			$stmt->execute($valuesArray);			$records = $stmt->fetchAll();			echo "<" . $recordName . "s>";						foreach($records as $record) {				echo "<$recordName>";				foreach ($record as $key => $value)				{					if (!is_numeric($key))						echo "<$key>$value</$key>";				}				echo "</$recordName>";			}							echo "</" . $recordName . "s>";		}				header("Content-type: text/xml");		echo "<?xml version=\"1.0\"?>";		echo "<records>";				//Get all account types and associated totals		$query = "SELECT account_type.id AS id, account_type.name AS name, SUM(account_transaction.amount) AS total FROM account LEFT JOIN(account_category, account_type, account_transaction) ON account.category_id=account_category.id AND account_category.type_id = account_type.id AND account_transaction.account_id = account.id WHERE account_transaction.transaction_category_id <> 4 AND account_transaction.transaction_date <= ':transaction_date' GROUP BY account_type.id ORDER BY account_type.name";		writeXML("account_type", $query, $valuesArray, $dbh);				//Get all account categories and associated totals		$query = "SELECT account_category.id AS account_category_id, account_category.type_id AS account_type_id, account_category.name, SUM(account_transaction.amount) AS total FROM account LEFT JOIN(account_category, account_type, account_transaction) ON account.category_id=account_category.id AND account_category.type_id = account_type.id AND account_transaction.account_id = account.id WHERE account_transaction.transaction_category_id <> 4 AND account_transaction.transaction_date <= ':transaction_date' GROUP BY account_category.id ORDER BY account_type.name, account_category.id";		writeXML("account_category", $query, $valuesArray, $dbh);				//Get all non-zero accounts and associated balances		$query = "SELECT account.id AS account_id, account.name AS account_name, account.description AS account_description, account_category.id AS account_category_id, SUM(account_transaction.amount) AS account_balance FROM account LEFT JOIN(account_category, account_type, account_transaction) ON account.category_id=account_category.id AND account_category.type_id = account_type.id AND account_transaction.account_id = account.id WHERE account_transaction.transaction_category_id <> 4 AND account_transaction.transaction_date <= ':transaction_date' GROUP BY account.name ORDER BY account_type.name, account_category.id";		if (strcmp($_GET['nonzero'], "true") == 0)			$query = "SELECT * FROM (" . $query . ") accounts WHERE account_balance > 0";		writeXML("account", $query, $valuesArray, $dbh);				echo "</records>";		?>